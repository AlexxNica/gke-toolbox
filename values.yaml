grafana:
  enabled: true
  serviceType: ClusterIP
  adminUser: admin
# Override this to set a particular password, otherwise a random string is generated
# adminPassowrd: supersecret
  persistentVolume:
    size: 10Gi
    subpath: ""
  image:
    repo: grafana/grafana
    tag: 4.3.2
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 100Mi

nginx-ingress:
  enabled: true
  controller:
    stats:
      enabled: true
    publishService:
      enabled: true
  statsExporter:
    service:
      annotations:
        prometheus.io/scrape: "true"

ingress:
  enabled: false
  class: nginx
  sslEnabled: false
## REQUIRED: Must be set to a subdomain that is configured as a Cloud DNS zone
# httpHostSubDomain: k8s.dev.vicnastea.io
  
externalDns:
  enabled: false
## REQUIRED
## Must be set to your GCP project Name
# project: my-project-name
  image:
    repository: registry.opensource.zalan.do/teapot/external-dns
    tag: v0.3.0
  sources:
    - service
    - ingress
# will make ExternalDNS see only the hosted zones matching provided domain, omit to process all available hosted zones
# domainFilter: myDomain.example.com
# would prevent ExternalDNS from deleting any records, omit to enable full synchronization
  policy: upsert-only
  registry: txt
  txtOwnerId: my-identifier

kube-lego:
  enabled: false
  config:
## REQUIRED must be set to a valid email
    LEGO_EMAIL: user@example.org
#   Set to https://acme-v01.api.letsencrypt.org/directory for "real" certs
    LEGO_URL: https://acme-staging.api.letsencrypt.org/directory
    LEGO_SECRET_NAME: lego-acme

spinnaker:
  enabled: false

istio:
  enabled: false
  auth:
    enabled: true
  mixer:
    service:
      annotations:
        "prometheus.io/scrape": "true"
        "prometheus.io/port": 42422
  rbac:
    install: true
  pilot:
    customConfigMap: true
  addons:
    zipkin:
      enabled: false
    prometheus:
      enabled: false
    grafana:
      enabled: false


stackdriverZipkin:
  enabled: false
  image:
    repository: gcr.io/stackdriver-trace-docker/zipkin-collector
    tag: latest
  addons:
    zipkin:
      enabled: false
    prometheus:
      enabled: false

gitlab:
  enabled: false
  serviceType: ClusterIP
  gitlabRootPassword: gke-toolbox
  externalUrl: http://gitlab.k8s.dev.vicnastea.io
  postgresql:
    metrics:
      enabled: true

prometheus:
  bootstrapped: yes
  global:
    ## Hyperkube image to use when getting CustomResourceDefinitions & cleaning up
    ##
    hyperkube:
      repository: quay.io/coreos/hyperkube
      tag: v1.7.2_coreos.0
      pullPolicy: IfNotPresent

  ## Prometheus-config-reloader image to use for config and rule reloading
  ##
  prometheusConfigReloader:
    repository: quay.io/coreos/prometheus-config-reloader
    tag: v0.0.2

  ## Configmap-reload image to use for reloading configmaps
  ##
  configmapReload:
    repository: quay.io/coreos/configmap-reload
    tag: v0.0.1

  ## Prometheus-operator image
  ##
  image:
    repository: quay.io/coreos/prometheus-operator
    tag: v0.12.0
    pullPolicy: IfNotPresent

  ## If enabled, prometheus-operator will create a service for scraping kubelets
  ##
  kubeletService:
    enable: true
    namespace: kube-system
    name: kubelet

  ## Node labels for prometheus-operator pod assignment
  ##
  nodeSelector: {}

  ## If true, create & use RBAC resources
  ##
  rbacEnable: true

  ## Prometheus-operator resource limits & requests
  ## Ref: https://kubernetes.io/docs/user-guide/compute-resources/
  ##
  resources: {}
    # limits:
    #   cpu: 200m
    #   memory: 100Mi
    # requests:
    #   cpu: 100m
    #   memory: 50Mi