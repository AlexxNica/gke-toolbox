grafana:
  enabled: true
  serviceType: ClusterIP
  adminUser: admin
# Override this to set a particular password, otherwise a random string is generated
# adminPassowrd: supersecret
  persistentVolume:
    size: 10Gi
    subpath: ""
  image:
    repo: grafana/grafana
    tag: 4.3.2
  resources:
    limits:
      cpu: 500m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 100Mi

nginx-ingress:
  enabled: true
  controller:
    image:
      repository: gcr.io/google_containers/nginx-ingress-controller
      tag: "0.9.0-beta.10"
    stats:
      enabled: true
    publishService:
      enabled: true
  statsExporter:
    service:
      annotations:
        prometheus.io/scrape: "true"

ingress:
  enabled: false
  class: nginx
## REQUIRED: Must be set to a subdomain that is configured as a Cloud DNS zone
# httpHostSubDomain: k8s.dev.vicnastea.io
  
externalDns:
  enabled: false
## REQUIRED
## Must be set to your GCP project Name
# project: my-project-name
  image:
    repository: registry.opensource.zalan.do/teapot/external-dns
    tag: v0.3.0
  sources:
    - service
    - ingress
# will make ExternalDNS see only the hosted zones matching provided domain, omit to process all available hosted zones
# domainFilter: myDomain.example.com
# would prevent ExternalDNS from deleting any records, omit to enable full synchronization
  policy: upsert-only
  registry: txt
  txtOwnerId: my-identifier

kube-lego:
  enabled: false
  config:
## REQUIRED must be set to a valid email
    LEGO_EMAIL: user@example.org
#   Set to https://acme-v01.api.letsencrypt.org/directory for "real" certs
    LEGO_URL: https://acme-staging.api.letsencrypt.org/directory
    LEGO_SECRET_NAME: lego-acme

spinnaker:
  enabled: false

istio:
  enabled: true
  auth:
    enabled: true
  mixer:
    service:
      annotations:
        "prometheus.io/scrape": "true"
        "prometheus.io/port": 42422
  rbac:
    install: true
  pilot:
    customConfigMap: true
  addons:
    zipkin:
      enabled: false
    prometheus:
      enabled: false
    grafana:
      enabled: false


stackdriverZipkin:
  enabled: true
  image:
    repository: gcr.io/stackdriver-trace-docker/zipkin-collector
    tag: latest
  addons:
    zipkin:
      enabled: false
    prometheus:
      enabled: false

gitlab:
  enabled: false
  serviceType: ClusterIP
  gitlabRootPassword: gke-toolbox
  externalUrl: http://gitlab.k8s.dev.vicnastea.io
  postgresql:
    metrics:
      enabled: true

prometheus:
  enabled: true
  server:
    resources:
      limits:
        cpu: 2
        memory: 2Gi
      requests:
        cpu: 500m
        memory: 512Mi

  serverFiles:
    prometheus.yml: |-
      rule_files:
        - /etc/config/rules
        - /etc/config/alerts

      scrape_configs:
        - job_name: prometheus
          static_configs:
            - targets:
              - localhost:9090

        - job_name: 'kubernetes-apiservers'
          scrape_interval: 30s
          kubernetes_sd_configs:
            - role: endpoints
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          relabel_configs:
            - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
              action: keep
              regex: default;kubernetes;https

        - job_name: 'kubernetes-nodes'
          scrape_interval: 10s
          scheme: https
          tls_config:
            ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
            insecure_skip_verify: true
          bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
          kubernetes_sd_configs:
            - role: node
          relabel_configs:
            - action: labelmap
              regex: __meta_kubernetes_node_label_(.+)
            - target_label: __address__
              replacement: kubernetes.default.svc:443
            - source_labels: [__meta_kubernetes_node_name]
              regex: (.+)
              target_label: __metrics_path__
              replacement: /api/v1/nodes/${1}/proxy/metrics

        - job_name: 'kubernetes-service-endpoints'
          scrape_interval: 10s
          kubernetes_sd_configs:
            - role: endpoints
          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_scheme]
              action: replace
              target_label: __scheme__
              regex: (https?)
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_service_annotation_prometheus_io_port]
              action: replace
              target_label: __address__
              regex: (.+)(?::\d+);(\d+)
              replacement: $1:$2
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_service_name]
              action: replace
              target_label: kubernetes_name

        - job_name: 'kubernetes-services'
          scrape_interval: 10s
          metrics_path: /probe
          params:
            module: [http_2xx]

          kubernetes_sd_configs:
            - role: service

          relabel_configs:
            - source_labels: [__meta_kubernetes_service_annotation_prometheus_io_probe]
              action: keep
              regex: true
            - source_labels: [__address__]
              target_label: __param_target
            - target_label: __address__
              replacement: blackbox
            - source_labels: [__param_target]
              target_label: instance
            - action: labelmap
              regex: __meta_kubernetes_service_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_service_name]
              target_label: kubernetes_name

        - job_name: 'kubernetes-pods'
          scrape_interval: 30s
          kubernetes_sd_configs:
            - role: pod
          relabel_configs:
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_scrape]
              action: keep
              regex: true
            - source_labels: [__meta_kubernetes_pod_annotation_prometheus_io_path]
              action: replace
              target_label: __metrics_path__
              regex: (.+)
            - source_labels: [__address__, __meta_kubernetes_pod_annotation_prometheus_io_port]
              action: replace
              regex: (.+):(?:\d+);(\d+)
              replacement: ${1}:${2}
              target_label: __address__
            - action: labelmap
              regex: __meta_kubernetes_pod_label_(.+)
            - source_labels: [__meta_kubernetes_namespace]
              action: replace
              target_label: kubernetes_namespace
            - source_labels: [__meta_kubernetes_pod_name]
              action: replace
              target_label: kubernetes_pod_name